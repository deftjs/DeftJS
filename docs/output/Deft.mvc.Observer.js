Ext.data.JsonP.Deft_mvc_Observer({"tagname":"class","name":"Deft.mvc.Observer","extends":"Ext.Base","mixins":[],"alternateClassNames":[],"aliases":{},"singleton":false,"requires":["Deft.core.Class","Ext.util.Observable"],"uses":[],"enum":null,"override":null,"inheritable":null,"inheritdoc":null,"meta":{"private":true},"private":true,"id":"class-Deft.mvc.Observer","code_type":"ext_define","members":{"cfg":[],"property":[],"method":[{"name":"constructor","tagname":"method","owner":"Deft.mvc.Observer","meta":{},"id":"method-constructor"},{"name":"destroy","tagname":"method","owner":"Deft.mvc.Observer","meta":{},"id":"method-destroy"},{"name":"isPropertyChain","tagname":"method","owner":"Deft.mvc.Observer","meta":{},"id":"method-isPropertyChain"},{"name":"isTargetObservable","tagname":"method","owner":"Deft.mvc.Observer","meta":{},"id":"method-isTargetObservable"},{"name":"locateReferences","tagname":"method","owner":"Deft.mvc.Observer","meta":{},"id":"method-locateReferences"},{"name":"locateTarget","tagname":"method","owner":"Deft.mvc.Observer","meta":{},"id":"method-locateTarget"},{"name":"parsePropertyChain","tagname":"method","owner":"Deft.mvc.Observer","meta":{},"id":"method-parsePropertyChain"}],"event":[],"css_var":[],"css_mixin":[]},"linenr":7,"files":[{"filename":"Observer.js","href":"Observer.html#Deft-mvc-Observer"}],"html_meta":{"private":null},"statics":{"cfg":[],"property":[],"method":[{"name":"mergeObserve","tagname":"method","owner":"Deft.mvc.Observer","meta":{"static":true},"id":"method-mergeObserve"}],"event":[],"css_var":[],"css_mixin":[]},"component":false,"superclasses":["Ext.Base"],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'>Ext.Base<div class='subclass '><strong>Deft.mvc.Observer</strong></div></div><h4>Requires</h4><div class='dependency'><a href='#!/api/Deft.core.Class' rel='Deft.core.Class' class='docClass'>Deft.core.Class</a></div><div class='dependency'>Ext.util.Observable</div><h4>Files</h4><div class='dependency'><a href='source/Observer.html#Deft-mvc-Observer' target='_blank'>Observer.js</a></div></pre><div class='doc-contents'><p class='private'><strong>NOTE</strong> This is a private utility class for internal use by the framework. Don't rely on its existence.</p><p>Used by <a href=\"#!/api/Deft.mvc.ViewController\" rel=\"Deft.mvc.ViewController\" class=\"docClass\">Deft.mvc.ViewController</a> to handle events fired from injected objects.</p>\n</div><div class='members'><div class='members-section'><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Instance Methods</h3><div id='method-constructor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Deft.mvc.Observer'>Deft.mvc.Observer</span><br/><a href='source/Observer.html#Deft-mvc-Observer-method-constructor' target='_blank' class='view-source'>view source</a></div><strong class='new-keyword'>new</strong><a href='#!/api/Deft.mvc.Observer-method-constructor' class='name expandable'>Deft.mvc.Observer</a>( <span class='pre'>config</span> ) : <a href=\"#!/api/Deft.mvc.Observer\" rel=\"Deft.mvc.Observer\" class=\"docClass\">Deft.mvc.Observer</a></div><div class='description'><div class='short'>Expects a config object with properties for host, target, and events. ...</div><div class='long'><p>Expects a config object with properties for host, target, and events.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Deft.mvc.Observer\" rel=\"Deft.mvc.Observer\" class=\"docClass\">Deft.mvc.Observer</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-destroy' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Deft.mvc.Observer'>Deft.mvc.Observer</span><br/><a href='source/Observer.html#Deft-mvc-Observer-method-destroy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Deft.mvc.Observer-method-destroy' class='name expandable'>destroy</a>( <span class='pre'></span> )</div><div class='description'><div class='short'>Iterate through the listeners array and remove each event listener. ...</div><div class='long'><p>Iterate through the listeners array and remove each event listener.</p>\n</div></div></div><div id='method-isPropertyChain' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Deft.mvc.Observer'>Deft.mvc.Observer</span><br/><a href='source/Observer.html#Deft-mvc-Observer-method-isPropertyChain' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Deft.mvc.Observer-method-isPropertyChain' class='name expandable'>isPropertyChain</a>( <span class='pre'>target</span> )</div><div class='description'><div class='short'>Returns true if the passed target is a string containing a '.', indicating that it is referencing a nested property. ...</div><div class='long'><p>Returns true if the passed target is a string containing a '.', indicating that it is referencing a nested property.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>target</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isTargetObservable' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Deft.mvc.Observer'>Deft.mvc.Observer</span><br/><a href='source/Observer.html#Deft-mvc-Observer-method-isTargetObservable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Deft.mvc.Observer-method-isTargetObservable' class='name expandable'>isTargetObservable</a>( <span class='pre'>host, target</span> )</div><div class='description'><div class='short'>Returns true if the passed host has a target that is Observable. ...</div><div class='long'><p>Returns true if the passed host has a target that is Observable.\nChecks for an isObservable=true property, observable mixin, or if the class extends Observable.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>host</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>target</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-locateReferences' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Deft.mvc.Observer'>Deft.mvc.Observer</span><br/><a href='source/Observer.html#Deft-mvc-Observer-method-locateReferences' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Deft.mvc.Observer-method-locateReferences' class='name expandable'>locateReferences</a>( <span class='pre'>host, target, handler</span> )</div><div class='description'><div class='short'>Given a host object, target property name, and handler, return object references for the final target and handler fun...</div><div class='long'><p>Given a host object, target property name, and handler, return object references for the final target and handler function.\nIf necessary, recurse down a property chain to locate the final target object for the event listener.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>host</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>target</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>handler</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-locateTarget' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Deft.mvc.Observer'>Deft.mvc.Observer</span><br/><a href='source/Observer.html#Deft-mvc-Observer-method-locateTarget' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Deft.mvc.Observer-method-locateTarget' class='name expandable'>locateTarget</a>( <span class='pre'>host, target</span> )</div><div class='description'><div class='short'>Attempts to locate an observer target given the host object and target property name. ...</div><div class='long'><p>Attempts to locate an observer target given the host object and target property name.\nChecks for both host[ target ], and host.getTarget().</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>host</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>target</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-parsePropertyChain' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Deft.mvc.Observer'>Deft.mvc.Observer</span><br/><a href='source/Observer.html#Deft-mvc-Observer-method-parsePropertyChain' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Deft.mvc.Observer-method-parsePropertyChain' class='name expandable'>parsePropertyChain</a>( <span class='pre'>host, target</span> )</div><div class='description'><div class='short'>Given a target property chain and a property host object, recurse down the property chain and return\nthe final host o...</div><div class='long'><p>Given a target property chain and a property host object, recurse down the property chain and return\nthe final host object from the property chain, and the final object that will accept the event listener.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>host</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>target</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div></div><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Static Methods</h3><div id='method-mergeObserve' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Deft.mvc.Observer'>Deft.mvc.Observer</span><br/><a href='source/Observer.html#Deft-mvc-Observer-method-mergeObserve' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Deft.mvc.Observer-method-mergeObserve' class='name expandable'>mergeObserve</a>( <span class='pre'>originalParentObserve, originalChildObserve</span> )<strong class='static signature' >static</strong></div><div class='description'><div class='short'>Merges child and parent observers into a single object. ...</div><div class='long'><p>Merges child and parent observers into a single object. This differs from a normal object merge because\na given observer target and event can potentially have multiple handlers declared in different parent or\nchild classes. It transforms an event handler value into an array of values, and merges the arrays of handlers\nfrom child to parent. This maintains the handlers even if both parent and child classes have handlers for the\nsame target and event.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>originalParentObserve</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>originalChildObserve</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div></div></div></div></div>"});