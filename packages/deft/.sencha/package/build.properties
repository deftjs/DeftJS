# ===========================================
# This file defines properties used by 
# build-impl.xml, which is the base impl
# of an applications build process.
# ===========================================

# ===========================================
# properties defining various directory
# locations
# ===========================================
build.dir=${package.build.dir}
build.resources.dir=${build.dir}/resources
package.resources.dir=${package.dir}/resources
package.sass.dir=${package.dir}/sass

# ===========================================
# definitions of various file name patterns
# used for output artifacts
# ===========================================
build.name.prefix=${build.dir}/${package.name}
build.name.css.prefix=${build.resources.dir}/${package.name}
build.name.ruby=config.rb

build.dev.suffix=-dev
build.debug.suffix=-debug
build.all.suffix=-all
build.rtl.suffix=-rtl

build.all.dev.suffix=${build.all.suffix}${build.dev.suffix}
build.all.debug.suffix=${build.all.suffix}${build.debug.suffix}
build.all.rtl.suffix=${build.all.suffix}${build.rtl.suffix}
build.all.rtl.debug.suffix=${build.all.suffix}${build.rtl.suffix}${build.debug.suffix}

# ===========================================
# define the output js file names for dev,
# debug, and compressed (no suffix)
# ===========================================
build.all.js=${build.name.prefix}.js
build.all.debug.js=${build.name.prefix}${build.debug.suffix}.js
build.all.dev.js=${build.name.prefix}${build.dev.suffix}.js

# ===========================================
# output file names for the scss files
# ===========================================
build.all.scss=${build.name.prefix}${build.all.debug.suffix}.scss
build.all.rtl.scss=${build.name.prefix}${build.all.rtl.debug.suffix}.scss

# ===========================================
# output file names for the css files 
# generated from the scss files by running
# a compass compilation
# ===========================================
build.all.css.debug.prefix=${package.name}${build.all.debug.suffix}
build.all.css.debug=${build.resources.dir}/${build.all.css.debug.prefix}.css
build.all.rtl.css.debug.prefix=${package.name}${build.all.rtl.debug.suffix}
build.all.rtl.css.debug=${build.resources.dir}/${build.all.rtl.css.debug.prefix}.css
build.all.css.prefix=${package.name}${build.all.suffix}
build.all.css=${build.resources.dir}/${build.all.css.prefix}.css
build.all.rtl.css.prefix=${package.name}${build.all.rtl.suffix}
build.all.rtl.css=${build.resources.dir}/${build.all.rtl.css.prefix}.css

build.all.ruby=${build.dir}/${build.name.ruby}

# ===========================================
# options to pass to the 'sencha fs slice' command
# ===========================================
build.slice.options=

# ===========================================
# preprocessor options used when generating
# concatenated js output files
# ===========================================
build.compile.js.dev.options=debug:true
build.compile.js.debug.options=debug:false
build.compile.js.options=debug:false

# ===========================================
# compression option used to generate '-all'
# js output file
# ===========================================
build.compile.js.compress=+yui

# ===========================================
# selector count threshold to use when 
# splitting a single css file into multiple
# css files (IE selector limit workaround)
# ===========================================
build.css.selector.limit=4095

# ===========================================
# options controlling output packaging
# operations for output '.pkg' file
# ===========================================
pkg.build.dir=${workspace.build.dir}/${package.name}
pkg.file.name=${package.name}.pkg
pkg.includes=**/*
pkg.excludes=package.json
