<project name="slice-impl">

    <target name="-generate-slicer-bootstrap" depends="-init-compiler">
<echo file="${bootstrap.example.js}">
/**
 * This file is generated by Sencha Cmd and should NOT be edited.  It is 
 * provided to support globbing requires, custom xtypes, and other 
 * metadata-driven class system features 
 */
</echo>
        <x-compile refid="${compiler.ref.id}">
            <![CDATA[
            exclude
                -all
            and
            include
                -not
                -tag=package-sencha-core,core
            and
            metadata
                +append
                --base-path=${bootstrap.base.path}
                +loader-paths
                -jsonp=Ext.Loader.addClassPathMappings
                -out=${bootstrap.example.js}
            and
            exclude
                -tag=package-sencha-core,framework
            and
            include
                -namespace=Ext.ux
            and
            metadata
                --base-path=${bootstrap.base.path}
                +alternates
                +append
                -out=${bootstrap.example.js}
            and
            metadata
                --base-path=${bootstrap.base.path}
                +alias
                +append
                -out=${bootstrap.example.js}
            and
            union
                -tag=packageOverrides
            and
            metadata
                --base-path=${bootstrap.base.path}
                +append
                +filenames
                -tpl=Ext.Loader.loadScript("{0}");
                -out=${bootstrap.example.js}
            ]]>
        </x-compile>
    </target>
 
    <target name="-update-slicer-css">
        <x-get-relative-path
            from="${package.example.dir}"
            to="${package.example.css}"
            property="package.example.css.path"
            />
        
<!--update the app's example to point to the build output-->
<echo file="${package.example.dir}/example.css">
/*
 * This file is generated by Sencha Cmd and should NOT be edited. It redirects
 * to the most recently built CSS file for the application to allow theme.html
 * to load properly for image slicing (required to support non-CSS3 browsers
 * such as IE9 and below).
 */
@import '${package.example.css.path}';
</echo>
    </target>
 
 
    <target name="-capture-theme-image"
            depends="-generate-slicer-bootstrap,-update-slicer-css">
        <echo>Capture theme image to ${build.dir}/theme-capture.png</echo>
        <x-sencha-command dir="${package.dir}">
            <![CDATA[
            theme
                capture
                    -page=${package.sass.dir}/example/theme.html
                    -image=${build.dir}/theme-capture.png
                    -manifest=${build.dir}/theme-capture.json
            ]]>
        </x-sencha-command>
    </target>
    
    <target name="-slice-theme-images" depends="-capture-theme-image">
        <echo>Slicing theme images to ${build.resources.dir}</echo>
        <x-sencha-command dir="${package.dir}">
            <![CDATA[
            fs
                slice
                    ${build.slice.options}
                    -image=${build.dir}/theme-capture.png
                    -manifest=${build.dir}/theme-capture.json
                    -out=${build.resources.dir}
            ]]>
        </x-sencha-command>
    </target>
 
    <target name="-before-slice"/>
    <target name="-after-slice"/>
    <target name="-slice" 
            depends="-slice-theme-images"/>

</project>